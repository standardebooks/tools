#!/usr/bin/env python3

import sys
import argparse
import se
import se.typography


def main() -> int:
	parser = argparse.ArgumentParser(description="Apply some scriptable typography rules from the Standard Ebooks typography manual to XHTML files.")
	parser.add_argument("-v", "--verbose", action="store_true", help="increase output verbosity")
	parser.add_argument("-n", "--no-quotes", dest="quotes", action="store_false", help="donâ€™t convert to smart quotes before doing other adjustments")
	parser.add_argument("targets", metavar="TARGET", nargs="+", help="an XHTML file, or a directory containing XHTML files")
	args = parser.parse_args()

	if args.verbose and not args.quotes:
		print("Skipping smart quotes.")

	for filename in se.get_target_filenames(args.targets, (".xhtml")):
		if filename.endswith("titlepage.xhtml"):
			continue

		if args.verbose:
			print("Processing {} ...".format(filename), end="", flush=True)

		with open(filename, "r+", encoding="utf-8") as file:
			xhtml = file.read()
			processed_xhtml = se.typography.typogrify(xhtml, args.quotes)

			if processed_xhtml != xhtml:
				file.seek(0)
				file.write(processed_xhtml)
				file.truncate()

		if args.verbose:
			print(" OK")

	return 0


if __name__ == "__main__":
	sys.exit(main())
