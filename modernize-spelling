#!/usr/bin/env python3

import sys
import argparse
import se
import se.spelling


def main() -> int:
	parser = argparse.ArgumentParser(description="Modernize spelling of some archaic words, and replace words that may be archaically compounded with a dash to a more modern spelling.  For example, replace `ash-tray` with `ashtray`.")
	parser.add_argument("-v", "--verbose", action="store_true", help="increase output verbosity")
	parser.add_argument("-n", "--no-hyphens", dest="modernize_hyphenation", action="store_false", help="donâ€™t modernize hyphenation")
	parser.add_argument("targets", metavar="TARGET", nargs="+", help="an XHTML file, or a directory containing XHTML files")
	args = parser.parse_args()

	for filename in se.get_target_filenames(args.targets, (".xhtml")):
		if args.verbose:
			print("Processing {} ...".format(filename), end="", flush=True)

		with open(filename, "r+", encoding="utf-8") as file:
			xhtml = file.read()

			try:
				new_xhtml = se.spelling.modernize_spelling(xhtml)
			except se.InvalidLanguageException as ex:
				se.print_error("No valid xml:lang attribute in <html> root. Only en-US and en-GB are supported.{}".format(" File: " + filename if not args.verbose else ""))
				return ex.code

			if args.modernize_hyphenation:
				new_xhtml = se.spelling.modernize_hyphenation(new_xhtml)

			if new_xhtml != xhtml:
				file.seek(0)
				file.write(new_xhtml)
				file.truncate()

		if args.verbose:
			print(" OK")

	return 0


if __name__ == "__main__":
	sys.exit(main())
